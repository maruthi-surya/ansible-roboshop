- name: deploy shipping service
  hosts: shipping
  become: yes
  tasks:
  - name: intall maven
    ansible.builtin.dnf:
     name: "{{ item }}"
     state: present
    loop:
    - maven
    - mysql

  - name: create system user
    ansible.builtin.user:
     name: roboshop
     comment: "roboshop system user"
     shell: /sbin/nologin
     home: /app

  - name: create directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: delete zip file
    ansible.builtin.file:
     state: absent
     path: /tmp/shipping.zip
        
  - name: download shipping zip file
    ansible.builtin.get_url:
     url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
     dest: /tmp/shipping.zip

  - name: unzip file
    ansible.builtin.unarchive:
     src: /tmp/shipping.zip
     dest: /app
     remote_src: yes   

  - name: install dependencies
    ansible.builtin.command: mvn clean package
    args:
     chdir: /app

  - name: move jar
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
     chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
     src: shipping.service
     dest: /etc/systemd/system/shipping.service

  - name: install mysql python libraries
    ansible.builtin.pip:
      executable: pip3.9
      name: PyMySQL  

  - name: load data into mysql database
    community.mysql.mysql_db:
     login_host: mysql.daws-practice.fun
     login_user: root
     login_password: RoboShop@1
     state: import
     name: all
     target: "{{ item }}"
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sq
    - /app/db/master-data.sql 

  - name: start shipping service
    ansible.builtin.systemd_service:
     daemon_reload: true
     name: shipping
     state: restarted
     enabled: true    
         